import{_ as o,W as e,X as c,Y as n,Z as s,$ as t,a0 as p,F as u}from"./framework-2d290880.js";const i={},l=p(`<h1 id="权限验证" tabindex="-1"><a class="header-anchor" href="#权限验证" aria-hidden="true">#</a> 权限验证</h1><p>我们使用Casbin进行权限验证.</p><h2 id="初始化" tabindex="-1"><a class="header-anchor" href="#初始化" aria-hidden="true">#</a> 初始化</h2><p>使用 redis 监控权限变化</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>cbn <span class="token operator">:=</span> c<span class="token punctuation">.</span>CasbinConf<span class="token punctuation">.</span><span class="token function">MustNewCasbinWithRedisWatcher</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>DatabaseConf<span class="token punctuation">.</span>Type<span class="token punctuation">,</span> c<span class="token punctuation">.</span>DatabaseConf<span class="token punctuation">.</span><span class="token function">GetDSN</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> c<span class="token punctuation">.</span>RedisConf<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,5),r={href:"https://github.com/suyuan32/simple-admin-core/blob/master/api/internal/svc/servicecontext.go",target:"_blank",rel:"noopener noreferrer"},k=p(`<h2 id="创建中间件" tabindex="-1"><a class="header-anchor" href="#创建中间件" aria-hidden="true">#</a> 创建中间件</h2><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">package</span> middleware

<span class="token keyword">import</span> <span class="token punctuation">(</span>
 <span class="token string">&quot;encoding/json&quot;</span>
 <span class="token string">&quot;fmt&quot;</span>
 <span class="token string">&quot;net/http&quot;</span>

 <span class="token string">&quot;github.com/suyuan32/simple-admin-core/common/logmessage&quot;</span>
 <span class="token string">&quot;github.com/suyuan32/simple-admin-core/common/message&quot;</span>

 <span class="token string">&quot;github.com/casbin/casbin/v2&quot;</span>
 <span class="token string">&quot;github.com/zeromicro/go-zero/core/errorx&quot;</span>
 <span class="token string">&quot;github.com/zeromicro/go-zero/core/logx&quot;</span>
 <span class="token string">&quot;github.com/zeromicro/go-zero/core/stores/redis&quot;</span>
 <span class="token string">&quot;github.com/zeromicro/go-zero/rest/httpx&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">type</span> AuthorityMiddleware <span class="token keyword">struct</span> <span class="token punctuation">{</span>
 Cbn <span class="token operator">*</span>casbin<span class="token punctuation">.</span>SyncedEnforcer
 Rds <span class="token operator">*</span>redis<span class="token punctuation">.</span>Redis
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">NewAuthorityMiddleware</span><span class="token punctuation">(</span>cbn <span class="token operator">*</span>casbin<span class="token punctuation">.</span>SyncedEnforcer<span class="token punctuation">,</span> rds <span class="token operator">*</span>redis<span class="token punctuation">.</span>Redis<span class="token punctuation">)</span> <span class="token operator">*</span>AuthorityMiddleware <span class="token punctuation">{</span>
 <span class="token keyword">return</span> <span class="token operator">&amp;</span>AuthorityMiddleware<span class="token punctuation">{</span>
  Cbn<span class="token punctuation">:</span> cbn<span class="token punctuation">,</span>
  Rds<span class="token punctuation">:</span> rds<span class="token punctuation">,</span>
 <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span>m <span class="token operator">*</span>AuthorityMiddleware<span class="token punctuation">)</span> <span class="token function">Handle</span><span class="token punctuation">(</span>next http<span class="token punctuation">.</span>HandlerFunc<span class="token punctuation">)</span> http<span class="token punctuation">.</span>HandlerFunc <span class="token punctuation">{</span>
 <span class="token keyword">return</span> <span class="token keyword">func</span><span class="token punctuation">(</span>w http<span class="token punctuation">.</span>ResponseWriter<span class="token punctuation">,</span> r <span class="token operator">*</span>http<span class="token punctuation">.</span>Request<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// get the path</span>
  obj <span class="token operator">:=</span> r<span class="token punctuation">.</span>URL<span class="token punctuation">.</span>Path
  <span class="token comment">// get the method</span>
  act <span class="token operator">:=</span> r<span class="token punctuation">.</span>Method
  <span class="token comment">// get the role id</span>
  roleId <span class="token operator">:=</span> r<span class="token punctuation">.</span><span class="token function">Context</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Value</span><span class="token punctuation">(</span><span class="token string">&quot;roleId&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">(</span>json<span class="token punctuation">.</span>Number<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token comment">// check the role status</span>
  roleStatus<span class="token punctuation">,</span> err <span class="token operator">:=</span> m<span class="token punctuation">.</span>Rds<span class="token punctuation">.</span><span class="token function">Hget</span><span class="token punctuation">(</span><span class="token string">&quot;roleData&quot;</span><span class="token punctuation">,</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">&quot;%s_status&quot;</span><span class="token punctuation">,</span> roleId<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
   logx<span class="token punctuation">.</span><span class="token function">Errorw</span><span class="token punctuation">(</span>logmessage<span class="token punctuation">.</span>RedisError<span class="token punctuation">,</span> logx<span class="token punctuation">.</span><span class="token function">Field</span><span class="token punctuation">(</span><span class="token string">&quot;detail&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
   httpx<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span>w<span class="token punctuation">,</span> errorx<span class="token punctuation">.</span><span class="token function">NewApiErrorWithoutMsg</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusUnauthorized<span class="token punctuation">)</span><span class="token punctuation">)</span>
   <span class="token keyword">return</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> roleStatus <span class="token operator">==</span> <span class="token string">&quot;0&quot;</span> <span class="token punctuation">{</span>
   logx<span class="token punctuation">.</span><span class="token function">Errorw</span><span class="token punctuation">(</span><span class="token string">&quot;Role is on forbidden status&quot;</span><span class="token punctuation">,</span> logx<span class="token punctuation">.</span><span class="token function">Field</span><span class="token punctuation">(</span><span class="token string">&quot;RoleId&quot;</span><span class="token punctuation">,</span> roleId<span class="token punctuation">)</span><span class="token punctuation">)</span>
   httpx<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span>w<span class="token punctuation">,</span> errorx<span class="token punctuation">.</span><span class="token function">NewApiError</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusBadRequest<span class="token punctuation">,</span> message<span class="token punctuation">.</span>RoleForbidden<span class="token punctuation">)</span><span class="token punctuation">)</span>
   <span class="token keyword">return</span>
  <span class="token punctuation">}</span>

  sub <span class="token operator">:=</span> roleId
  result<span class="token punctuation">,</span> err <span class="token operator">:=</span> m<span class="token punctuation">.</span>Cbn<span class="token punctuation">.</span><span class="token function">Enforce</span><span class="token punctuation">(</span>sub<span class="token punctuation">,</span> obj<span class="token punctuation">,</span> act<span class="token punctuation">)</span>
  <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
   logx<span class="token punctuation">.</span><span class="token function">Errorw</span><span class="token punctuation">(</span><span class="token string">&quot;Casbin enforce error&quot;</span><span class="token punctuation">,</span> logx<span class="token punctuation">.</span><span class="token function">Field</span><span class="token punctuation">(</span><span class="token string">&quot;detail&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
   httpx<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span>w<span class="token punctuation">,</span> errorx<span class="token punctuation">.</span><span class="token function">NewApiError</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusInternalServerError<span class="token punctuation">,</span> errorx<span class="token punctuation">.</span>ApiRequestFailed<span class="token punctuation">)</span><span class="token punctuation">)</span>
   <span class="token keyword">return</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> result <span class="token punctuation">{</span>
   logx<span class="token punctuation">.</span><span class="token function">Infow</span><span class="token punctuation">(</span><span class="token string">&quot;HTTP/HTTPS Request&quot;</span><span class="token punctuation">,</span> logx<span class="token punctuation">.</span><span class="token function">Field</span><span class="token punctuation">(</span><span class="token string">&quot;UUID&quot;</span><span class="token punctuation">,</span> r<span class="token punctuation">.</span><span class="token function">Context</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Value</span><span class="token punctuation">(</span><span class="token string">&quot;userId&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token builtin">string</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    logx<span class="token punctuation">.</span><span class="token function">Field</span><span class="token punctuation">(</span><span class="token string">&quot;Path&quot;</span><span class="token punctuation">,</span> obj<span class="token punctuation">)</span><span class="token punctuation">,</span> logx<span class="token punctuation">.</span><span class="token function">Field</span><span class="token punctuation">(</span><span class="token string">&quot;Method&quot;</span><span class="token punctuation">,</span> act<span class="token punctuation">)</span><span class="token punctuation">)</span>
   <span class="token function">next</span><span class="token punctuation">(</span>w<span class="token punctuation">,</span> r<span class="token punctuation">)</span>
   <span class="token keyword">return</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
   logx<span class="token punctuation">.</span><span class="token function">Errorw</span><span class="token punctuation">(</span><span class="token string">&quot;The role is not permitted to access the API&quot;</span><span class="token punctuation">,</span> logx<span class="token punctuation">.</span><span class="token function">Field</span><span class="token punctuation">(</span><span class="token string">&quot;RoleId&quot;</span><span class="token punctuation">,</span> roleId<span class="token punctuation">)</span><span class="token punctuation">,</span>
    logx<span class="token punctuation">.</span><span class="token function">Field</span><span class="token punctuation">(</span><span class="token string">&quot;Path&quot;</span><span class="token punctuation">,</span> obj<span class="token punctuation">)</span><span class="token punctuation">,</span> logx<span class="token punctuation">.</span><span class="token function">Field</span><span class="token punctuation">(</span><span class="token string">&quot;Method&quot;</span><span class="token punctuation">,</span> act<span class="token punctuation">)</span><span class="token punctuation">)</span>
   httpx<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span>w<span class="token punctuation">,</span> errorx<span class="token punctuation">.</span><span class="token function">NewApiErrorWithoutMsg</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusUnauthorized<span class="token punctuation">)</span><span class="token punctuation">)</span>
   <span class="token keyword">return</span>
  <span class="token punctuation">}</span>
 <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),d={href:"https://github.com/suyuan32/simple-admin-core/blob/master/api/internal/middleware/authoritymiddleware.go",target:"_blank",rel:"noopener noreferrer"},v=p(`<h2 id="在-api-文件中使用" tabindex="-1"><a class="header-anchor" href="#在-api-文件中使用" aria-hidden="true">#</a> 在 api 文件中使用</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>@server(
    jwt: Auth
    group: api
    middleware: Authority
)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),m={href:"https://go-zero.dev/cn/docs/advance/middleware",target:"_blank",rel:"noopener noreferrer"},b=n("h4",{id:"目前api生成已支持自动生成鉴权中间件",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#目前api生成已支持自动生成鉴权中间件","aria-hidden":"true"},"#"),s(" 目前API生成已支持自动生成鉴权中间件")],-1);function h(g,f){const a=u("ExternalLinkIcon");return e(),c("div",null,[l,n("p",null,[n("a",r,[s("cbn"),t(a)])]),k,n("p",null,[n("a",d,[s("Middleware"),t(a)])]),v,n("p",null,[n("a",m,[s("如何使用中间件"),t(a)])]),b])}const w=o(i,[["render",h],["__file","authorization.html.vue"]]);export{w as default};
