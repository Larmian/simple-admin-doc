import{ab as e,F as o,G as p,E as n,R as a,M as t,ac as l,U as c}from"./framework-263be002.js";const i="/assets/oauth_add_provider_en.png",u={},r=n("h1",{id:"oauth",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#oauth","aria-hidden":"true"},"#"),a(" Oauth")],-1),d=n("blockquote",null,[n("p",null,"The system offer google and github Oauth log in by default")],-1),k={href:"https://developers.google.com/identity/protocols/oauth2",target:"_blank",rel:"noopener noreferrer"},g={href:"https://docs.github.com/en/developers/apps/building-oauth-apps/authorizing-oauth-apps",target:"_blank",rel:"noopener noreferrer"},h=l('<blockquote><p>Add provider</p></blockquote><figure><img src="'+i+`" alt="picture" tabindex="0" loading="lazy"><figcaption>picture</figcaption></figure><blockquote><p>Edit src/views/sys/login/LoginForm.vue</p></blockquote><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>flex justify-evenly enter-x<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\`\${prefixCls}-sign-in-way\`<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>GithubFilled</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>oauthLoginHandler(&#39;github&#39;)<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>WechatFilled</span> <span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>AlipayCircleFilled</span> <span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>GoogleCircleFilled</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>oauthLoginHandler(&#39;google&#39;)<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TwitterCircleFilled</span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>Add icon and click event with the provider name param mode is put the token in the URL header mode is put the token in the &#39;authorization&#39; header</p></blockquote>`,5);function v(m,_){const s=c("ExternalLinkIcon");return o(),p("div",null,[r,d,n("blockquote",null,[n("p",null,[a("How to get clientID and client secret? "),n("a",k,[a("google"),t(s)]),n("a",g,[a("github"),t(s)])])]),h])}const f=e(u,[["render",v],["__file","oauth.html.vue"]]);export{f as default};
