import{_ as e,W as o,X as c,Y as n,Z as s,$ as t,a0 as p,F as i}from"./framework-6f82d902.js";const u={},l=n("h2",{id:"ent-快速入门",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#ent-快速入门","aria-hidden":"true"},"#"),s(" Ent 快速入门")],-1),r={id:"官方文档",tabindex:"-1"},k=n("a",{class:"header-anchor",href:"#官方文档","aria-hidden":"true"},"#",-1),d={href:"https://entgo.io/zh/docs/getting-started/",target:"_blank",rel:"noopener noreferrer"},v={id:"schema中文文档-推荐",tabindex:"-1"},m=n("a",{class:"header-anchor",href:"#schema中文文档-推荐","aria-hidden":"true"},"#",-1),b={href:"https://suyuan32.github.io/ent-chinese-doc/#/zh-cn/getting-started",target:"_blank",rel:"noopener noreferrer"},g=p(`<h2 id="实战" tabindex="-1"><a class="header-anchor" href="#实战" aria-hidden="true">#</a> 实战</h2><blockquote><p>安装</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>go get <span class="token parameter variable">-d</span> entgo.io/ent/cmd/ent
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>初始化代码</p></blockquote><p>在 pkg 执行</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 创建 User 模板</span>
go run <span class="token parameter variable">-mod</span><span class="token operator">=</span>mod entgo.io/ent/cmd/ent init User

<span class="token comment"># 生成代码，使用 template ， simple admin core 添加了 Page 模板实现简便的分页查询</span>
go run <span class="token parameter variable">-mod</span><span class="token operator">=</span>mod entgo.io/ent/cmd/ent generate <span class="token parameter variable">--template</span> <span class="token assign-left variable">glob</span><span class="token operator">=</span><span class="token string">&quot;./ent/template/*.tmpl&quot;</span> ./ent/schema
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>定义数据模型</p></blockquote><p>在 pkg/ent 中，一般只需要关注 schema 文件夹，里面定义了模型文件，其他文件夹和文件基本都是自动生成的, mixin 用于共用字段, 例如</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">package</span> schema

<span class="token keyword">import</span> <span class="token punctuation">(</span>
 <span class="token string">&quot;entgo.io/ent&quot;</span>
 <span class="token string">&quot;entgo.io/ent/dialect/entsql&quot;</span>
 <span class="token string">&quot;entgo.io/ent/schema&quot;</span>
 <span class="token string">&quot;entgo.io/ent/schema/edge&quot;</span>
 <span class="token string">&quot;entgo.io/ent/schema/field&quot;</span>

 <span class="token string">&quot;github.com/suyuan32/simple-admin-core/pkg/ent/schema/mixins&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">type</span> Role <span class="token keyword">struct</span> <span class="token punctuation">{</span>
 ent<span class="token punctuation">.</span>Schema
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span>Role<span class="token punctuation">)</span> <span class="token function">Fields</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>ent<span class="token punctuation">.</span>Field <span class="token punctuation">{</span>
 <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>ent<span class="token punctuation">.</span>Field<span class="token punctuation">{</span>
  field<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Comment</span><span class="token punctuation">(</span><span class="token string">&quot;role name | 角色名&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token comment">// field 定义字段， string 声明类型, comment 声明注释， default 声明默认值, unique 声明唯一</span>
  field<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token string">&quot;value&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Unique</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Comment</span><span class="token punctuation">(</span><span class="token string">&quot;role value for permission control in front end | 角色值，用于前端权限控制&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  field<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token string">&quot;default_router&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token string">&quot;dashboard&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Comment</span><span class="token punctuation">(</span><span class="token string">&quot;default menu : dashboard | 默认登录页面&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  field<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token string">&quot;remark&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Comment</span><span class="token punctuation">(</span><span class="token string">&quot;remark | 备注&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  field<span class="token punctuation">.</span><span class="token function">Uint32</span><span class="token punctuation">(</span><span class="token string">&quot;order_no&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Comment</span><span class="token punctuation">(</span><span class="token string">&quot;order number | 排序编号&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
 <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span>Role<span class="token punctuation">)</span> <span class="token function">Mixin</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>ent<span class="token punctuation">.</span>Mixin <span class="token punctuation">{</span>
 <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>ent<span class="token punctuation">.</span>Mixin<span class="token punctuation">{</span>
  <span class="token comment">// 嵌入公用字段</span>
  mixins<span class="token punctuation">.</span>BaseMixin<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  mixins<span class="token punctuation">.</span>StatusMixin<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
 <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span>Role<span class="token punctuation">)</span> <span class="token function">Edges</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>ent<span class="token punctuation">.</span>Edge <span class="token punctuation">{</span>
 <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>ent<span class="token punctuation">.</span>Edge<span class="token punctuation">{</span>
  <span class="token comment">// 声明关系, ent 的关系用 edge 表示</span>
  edge<span class="token punctuation">.</span><span class="token function">To</span><span class="token punctuation">(</span><span class="token string">&quot;menus&quot;</span><span class="token punctuation">,</span> Menu<span class="token punctuation">.</span>Type<span class="token punctuation">)</span><span class="token punctuation">,</span>
 <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span>Role<span class="token punctuation">)</span> <span class="token function">Annotations</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>schema<span class="token punctuation">.</span>Annotation <span class="token punctuation">{</span>
 <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>schema<span class="token punctuation">.</span>Annotation<span class="token punctuation">{</span>
  entsql<span class="token punctuation">.</span>Annotation<span class="token punctuation">{</span>Table<span class="token punctuation">:</span> <span class="token string">&quot;sys_roles&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
 <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="mixin-介绍" tabindex="-1"><a class="header-anchor" href="#mixin-介绍" aria-hidden="true">#</a> Mixin 介绍</h3><p>目前项目提供了三种 Mixin 位于 <code>simple-admin-core/pkg/ent/schema/mixins</code></p><ul><li>base: 提供自增整数id, created_at, updated_at</li><li>uuid: 提供uuid类型的id作为主键, created_at, updated_at</li><li>status: 提供状态字段 status</li></ul><h4 id="uuidx-提供两个方法用于转换-uuid" tabindex="-1"><a class="header-anchor" href="#uuidx-提供两个方法用于转换-uuid" aria-hidden="true">#</a> uuidx 提供两个方法用于转换 uuid</h4><ul><li>uuidx.ParseUUIDSlice 用于将uuid的string数组转化为ent的uuid数组类型</li><li>uuidx.ParseUUIDString 用于将 uuid 的 string 转化为 uuid 类型</li></ul>`,14),f={id:"软删除可查看-soft-delete",tabindex:"-1"},h=n("a",{class:"header-anchor",href:"#软删除可查看-soft-delete","aria-hidden":"true"},"#",-1),q={href:"https://entgo.io/docs/interceptors/#soft-delete",target:"_blank",rel:"noopener noreferrer"},x=p(`<h3 id="初始化并添加全局引用" tabindex="-1"><a class="header-anchor" href="#初始化并添加全局引用" aria-hidden="true">#</a> 初始化并添加全局引用</h3><p>参考 rpc/internal/svc/service_context.go</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">package</span> svc

<span class="token keyword">import</span> <span class="token punctuation">(</span>
 <span class="token string">&quot;github.com/suyuan32/simple-admin-core/pkg/ent&quot;</span>
 <span class="token string">&quot;github.com/suyuan32/simple-admin-core/rpc/internal/config&quot;</span>

 <span class="token string">&quot;github.com/zeromicro/go-zero/core/logx&quot;</span>
 <span class="token string">&quot;github.com/zeromicro/go-zero/core/stores/redis&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">type</span> ServiceContext <span class="token keyword">struct</span> <span class="token punctuation">{</span>
 Config config<span class="token punctuation">.</span>Config
 DB     <span class="token operator">*</span>ent<span class="token punctuation">.</span>Client
 Redis  <span class="token operator">*</span>redis<span class="token punctuation">.</span>Redis
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">NewServiceContext</span><span class="token punctuation">(</span>c config<span class="token punctuation">.</span>Config<span class="token punctuation">)</span> <span class="token operator">*</span>ServiceContext <span class="token punctuation">{</span>
 db <span class="token operator">:=</span> ent<span class="token punctuation">.</span><span class="token function">NewClient</span><span class="token punctuation">(</span>
  ent<span class="token punctuation">.</span><span class="token function">Log</span><span class="token punctuation">(</span>logx<span class="token punctuation">.</span>Info<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// logger</span>
  ent<span class="token punctuation">.</span><span class="token function">Driver</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>DatabaseConf<span class="token punctuation">.</span><span class="token function">GetCacheDriver</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>RedisConf<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  ent<span class="token punctuation">.</span><span class="token function">Debug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// debug mode</span>
 <span class="token punctuation">)</span>

 <span class="token comment">// initialize redis</span>
 rds <span class="token operator">:=</span> c<span class="token punctuation">.</span>RedisConf<span class="token punctuation">.</span><span class="token function">NewRedis</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
 <span class="token keyword">if</span> <span class="token operator">!</span>rds<span class="token punctuation">.</span><span class="token function">Ping</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  logx<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token string">&quot;Initialize redis failed&quot;</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> <span class="token boolean">nil</span>
 <span class="token punctuation">}</span>
 logx<span class="token punctuation">.</span><span class="token function">Info</span><span class="token punctuation">(</span><span class="token string">&quot;Initialize redis connection successfully&quot;</span><span class="token punctuation">)</span>

 <span class="token keyword">return</span> <span class="token operator">&amp;</span>ServiceContext<span class="token punctuation">{</span>
  Config<span class="token punctuation">:</span> c<span class="token punctuation">,</span>
  DB<span class="token punctuation">:</span>     db<span class="token punctuation">,</span>
  Redis<span class="token punctuation">:</span>  rds<span class="token punctuation">,</span>
 <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ent-驱动" tabindex="-1"><a class="header-anchor" href="#ent-驱动" aria-hidden="true">#</a> Ent 驱动</h3><p>注意： ent driver 有两种驱动，带缓存和不带缓存</p><blockquote><p>带缓存 （会导致更新数据需要等待缓存时间过去才能看到更新，适合更新少的系统）</p></blockquote><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>db <span class="token operator">:=</span> ent<span class="token punctuation">.</span><span class="token function">NewClient</span><span class="token punctuation">(</span>
    ent<span class="token punctuation">.</span><span class="token function">Log</span><span class="token punctuation">(</span>logx<span class="token punctuation">.</span>Info<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// logger</span>
    ent<span class="token punctuation">.</span><span class="token function">Driver</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>DatabaseConf<span class="token punctuation">.</span><span class="token function">NewCacheDriver</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>RedisConf<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    ent<span class="token punctuation">.</span><span class="token function">Debug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// debug mode</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>不带缓存 (数据立即更新)</p></blockquote><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>db <span class="token operator">:=</span> ent<span class="token punctuation">.</span><span class="token function">NewClient</span><span class="token punctuation">(</span>
    ent<span class="token punctuation">.</span><span class="token function">Log</span><span class="token punctuation">(</span>logx<span class="token punctuation">.</span>Info<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// logger</span>
    ent<span class="token punctuation">.</span><span class="token function">Driver</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>DatabaseConf<span class="token punctuation">.</span><span class="token function">NewNoCacheDriver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    ent<span class="token punctuation">.</span><span class="token function">Debug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// debug mode</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>使用效果</p></blockquote><p>更新角色状态 rpc/internal/logic/update_role_status_logic.go</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">package</span> logic

<span class="token keyword">import</span> <span class="token punctuation">(</span>
 <span class="token string">&quot;context&quot;</span>
 <span class="token string">&quot;fmt&quot;</span>
 <span class="token string">&quot;strconv&quot;</span>

 <span class="token string">&quot;github.com/suyuan32/simple-admin-core/pkg/ent&quot;</span>
 <span class="token string">&quot;github.com/suyuan32/simple-admin-core/pkg/msg/logmsg&quot;</span>
 <span class="token string">&quot;github.com/suyuan32/simple-admin-core/pkg/statuserr&quot;</span>
 <span class="token string">&quot;github.com/suyuan32/simple-admin-core/rpc/internal/svc&quot;</span>
 <span class="token string">&quot;github.com/suyuan32/simple-admin-core/rpc/types/core&quot;</span>

 <span class="token string">&quot;github.com/zeromicro/go-zero/core/errorx&quot;</span>
 <span class="token string">&quot;github.com/zeromicro/go-zero/core/logx&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">type</span> UpdateRoleStatusLogic <span class="token keyword">struct</span> <span class="token punctuation">{</span>
 ctx    context<span class="token punctuation">.</span>Context
 svcCtx <span class="token operator">*</span>svc<span class="token punctuation">.</span>ServiceContext
 logx<span class="token punctuation">.</span>Logger
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">NewUpdateRoleStatusLogic</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> svcCtx <span class="token operator">*</span>svc<span class="token punctuation">.</span>ServiceContext<span class="token punctuation">)</span> <span class="token operator">*</span>UpdateRoleStatusLogic <span class="token punctuation">{</span>
 <span class="token keyword">return</span> <span class="token operator">&amp;</span>UpdateRoleStatusLogic<span class="token punctuation">{</span>
  ctx<span class="token punctuation">:</span>    ctx<span class="token punctuation">,</span>
  svcCtx<span class="token punctuation">:</span> svcCtx<span class="token punctuation">,</span>
  Logger<span class="token punctuation">:</span> logx<span class="token punctuation">.</span><span class="token function">WithContext</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span><span class="token punctuation">,</span>
 <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span>l <span class="token operator">*</span>UpdateRoleStatusLogic<span class="token punctuation">)</span> <span class="token function">UpdateRoleStatus</span><span class="token punctuation">(</span>in <span class="token operator">*</span>core<span class="token punctuation">.</span>StatusCodeReq<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>core<span class="token punctuation">.</span>BaseResp<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 role<span class="token punctuation">,</span> err <span class="token operator">:=</span> l<span class="token punctuation">.</span>svcCtx<span class="token punctuation">.</span>DB<span class="token punctuation">.</span>Role<span class="token punctuation">.</span><span class="token function">UpdateOneID</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span>Id<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">SetStatus</span><span class="token punctuation">(</span><span class="token function">uint8</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span>Status<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Save</span><span class="token punctuation">(</span>l<span class="token punctuation">.</span>ctx<span class="token punctuation">)</span>

 <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
  <span class="token keyword">switch</span> <span class="token punctuation">{</span>
  <span class="token keyword">case</span> ent<span class="token punctuation">.</span><span class="token function">IsNotFound</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">:</span>
   logx<span class="token punctuation">.</span><span class="token function">Errorw</span><span class="token punctuation">(</span>err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> logx<span class="token punctuation">.</span><span class="token function">Field</span><span class="token punctuation">(</span><span class="token string">&quot;detail&quot;</span><span class="token punctuation">,</span> in<span class="token punctuation">)</span><span class="token punctuation">)</span>
   <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> statuserr<span class="token punctuation">.</span><span class="token function">NewInvalidArgumentError</span><span class="token punctuation">(</span>i18n<span class="token punctuation">.</span>TargetNotFound<span class="token punctuation">)</span>
  <span class="token keyword">default</span><span class="token punctuation">:</span>
   logx<span class="token punctuation">.</span><span class="token function">Errorw</span><span class="token punctuation">(</span>logmsg<span class="token punctuation">.</span>DatabaseError<span class="token punctuation">,</span> logx<span class="token punctuation">.</span><span class="token function">Field</span><span class="token punctuation">(</span><span class="token string">&quot;detail&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
   <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> statuserr<span class="token punctuation">.</span><span class="token function">NewInternalError</span><span class="token punctuation">(</span>i18n<span class="token punctuation">.</span>DatabaseError<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
 <span class="token punctuation">}</span>

 <span class="token comment">// update redis</span>

 err <span class="token operator">=</span> l<span class="token punctuation">.</span>svcCtx<span class="token punctuation">.</span>Redis<span class="token punctuation">.</span><span class="token function">Hset</span><span class="token punctuation">(</span><span class="token string">&quot;roleData&quot;</span><span class="token punctuation">,</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">&quot;%d&quot;</span><span class="token punctuation">,</span> role<span class="token punctuation">.</span>ID<span class="token punctuation">)</span><span class="token punctuation">,</span> role<span class="token punctuation">.</span>Name<span class="token punctuation">)</span>
 err <span class="token operator">=</span> l<span class="token punctuation">.</span>svcCtx<span class="token punctuation">.</span>Redis<span class="token punctuation">.</span><span class="token function">Hset</span><span class="token punctuation">(</span><span class="token string">&quot;roleData&quot;</span><span class="token punctuation">,</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">&quot;%d_value&quot;</span><span class="token punctuation">,</span> role<span class="token punctuation">.</span>ID<span class="token punctuation">)</span><span class="token punctuation">,</span> role<span class="token punctuation">.</span>Value<span class="token punctuation">)</span>
 err <span class="token operator">=</span> l<span class="token punctuation">.</span>svcCtx<span class="token punctuation">.</span>Redis<span class="token punctuation">.</span><span class="token function">Hset</span><span class="token punctuation">(</span><span class="token string">&quot;roleData&quot;</span><span class="token punctuation">,</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">&quot;%d_status&quot;</span><span class="token punctuation">,</span> role<span class="token punctuation">.</span>ID<span class="token punctuation">)</span><span class="token punctuation">,</span> strconv<span class="token punctuation">.</span><span class="token function">Itoa</span><span class="token punctuation">(</span><span class="token function">int</span><span class="token punctuation">(</span>role<span class="token punctuation">.</span>Status<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
 <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> statuserr<span class="token punctuation">.</span><span class="token function">NewInternalError</span><span class="token punctuation">(</span>i18n<span class="token punctuation">.</span>RedisError<span class="token punctuation">)</span>
 <span class="token punctuation">}</span>

 <span class="token keyword">return</span> <span class="token operator">&amp;</span>core<span class="token punctuation">.</span>BaseResp<span class="token punctuation">{</span>Msg<span class="token punctuation">:</span> i18n<span class="token punctuation">.</span>UpdateSuccess<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="查询数据" tabindex="-1"><a class="header-anchor" href="#查询数据" aria-hidden="true">#</a> 查询数据</h3>`,13),y={href:"http://ent.ryansu.pro/#/zh-cn/predicates",target:"_blank",rel:"noopener noreferrer"},w=p(`<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">package</span> logic

<span class="token keyword">import</span> <span class="token punctuation">(</span>
 <span class="token string">&quot;context&quot;</span>

 <span class="token string">&quot;github.com/suyuan32/simple-admin-core/pkg/ent/api&quot;</span>
 <span class="token string">&quot;github.com/suyuan32/simple-admin-core/pkg/ent/predicate&quot;</span>
 <span class="token string">&quot;github.com/suyuan32/simple-admin-core/pkg/i18n&quot;</span>
 <span class="token string">&quot;github.com/suyuan32/simple-admin-core/pkg/statuserr&quot;</span>
 <span class="token string">&quot;github.com/suyuan32/simple-admin-core/rpc/internal/svc&quot;</span>
 <span class="token string">&quot;github.com/suyuan32/simple-admin-core/rpc/types/core&quot;</span>

 <span class="token string">&quot;github.com/zeromicro/go-zero/core/logx&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">type</span> GetApiListLogic <span class="token keyword">struct</span> <span class="token punctuation">{</span>
 ctx    context<span class="token punctuation">.</span>Context
 svcCtx <span class="token operator">*</span>svc<span class="token punctuation">.</span>ServiceContext
 logx<span class="token punctuation">.</span>Logger
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">NewGetApiListLogic</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> svcCtx <span class="token operator">*</span>svc<span class="token punctuation">.</span>ServiceContext<span class="token punctuation">)</span> <span class="token operator">*</span>GetApiListLogic <span class="token punctuation">{</span>
 <span class="token keyword">return</span> <span class="token operator">&amp;</span>GetApiListLogic<span class="token punctuation">{</span>
  ctx<span class="token punctuation">:</span>    ctx<span class="token punctuation">,</span>
  svcCtx<span class="token punctuation">:</span> svcCtx<span class="token punctuation">,</span>
  Logger<span class="token punctuation">:</span> logx<span class="token punctuation">.</span><span class="token function">WithContext</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span><span class="token punctuation">,</span>
 <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span>l <span class="token operator">*</span>GetApiListLogic<span class="token punctuation">)</span> <span class="token function">GetApiList</span><span class="token punctuation">(</span>in <span class="token operator">*</span>core<span class="token punctuation">.</span>ApiPageReq<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>core<span class="token punctuation">.</span>ApiListResp<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token keyword">var</span> predicates <span class="token punctuation">[</span><span class="token punctuation">]</span>predicate<span class="token punctuation">.</span>API

 <span class="token keyword">if</span> in<span class="token punctuation">.</span>Path <span class="token operator">!=</span> <span class="token string">&quot;&quot;</span> <span class="token punctuation">{</span>
  predicates <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>predicates<span class="token punctuation">,</span> api<span class="token punctuation">.</span><span class="token function">PathContains</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span>Path<span class="token punctuation">)</span><span class="token punctuation">)</span>
 <span class="token punctuation">}</span>

 <span class="token keyword">if</span> in<span class="token punctuation">.</span>Description <span class="token operator">!=</span> <span class="token string">&quot;&quot;</span> <span class="token punctuation">{</span>
  predicates <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>predicates<span class="token punctuation">,</span> api<span class="token punctuation">.</span><span class="token function">DescriptionContains</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span>Description<span class="token punctuation">)</span><span class="token punctuation">)</span>
 <span class="token punctuation">}</span>

 <span class="token keyword">if</span> in<span class="token punctuation">.</span>Method <span class="token operator">!=</span> <span class="token string">&quot;&quot;</span> <span class="token punctuation">{</span>
  predicates <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>predicates<span class="token punctuation">,</span> api<span class="token punctuation">.</span><span class="token function">MethodContains</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span>Method<span class="token punctuation">)</span><span class="token punctuation">)</span>
 <span class="token punctuation">}</span>

 <span class="token keyword">if</span> in<span class="token punctuation">.</span>Group <span class="token operator">!=</span> <span class="token string">&quot;&quot;</span> <span class="token punctuation">{</span>
  predicates <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>predicates<span class="token punctuation">,</span> api<span class="token punctuation">.</span><span class="token function">APIGroupContains</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span>Group<span class="token punctuation">)</span><span class="token punctuation">)</span>
 <span class="token punctuation">}</span>

 apis<span class="token punctuation">,</span> err <span class="token operator">:=</span> l<span class="token punctuation">.</span>svcCtx<span class="token punctuation">.</span>DB<span class="token punctuation">.</span>API<span class="token punctuation">.</span><span class="token function">Query</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>predicates<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Page</span><span class="token punctuation">(</span>l<span class="token punctuation">.</span>ctx<span class="token punctuation">,</span> in<span class="token punctuation">.</span>Page<span class="token punctuation">,</span> in<span class="token punctuation">.</span>PageSize<span class="token punctuation">)</span>

 <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
  logx<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span>err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> statuserr<span class="token punctuation">.</span><span class="token function">NewInternalError</span><span class="token punctuation">(</span>i18n<span class="token punctuation">.</span>DatabaseError<span class="token punctuation">)</span>
 <span class="token punctuation">}</span>

 resp <span class="token operator">:=</span> <span class="token operator">&amp;</span>core<span class="token punctuation">.</span>ApiListResp<span class="token punctuation">{</span><span class="token punctuation">}</span>
 resp<span class="token punctuation">.</span>Total <span class="token operator">=</span> apis<span class="token punctuation">.</span>PageDetails<span class="token punctuation">.</span>Total

 <span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> v <span class="token operator">:=</span> <span class="token keyword">range</span> apis<span class="token punctuation">.</span>List <span class="token punctuation">{</span>
  resp<span class="token punctuation">.</span>Data <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>resp<span class="token punctuation">.</span>Data<span class="token punctuation">,</span> <span class="token operator">&amp;</span>core<span class="token punctuation">.</span>ApiInfo<span class="token punctuation">{</span>
   Id<span class="token punctuation">:</span>          v<span class="token punctuation">.</span>ID<span class="token punctuation">,</span>
   CreatedAt<span class="token punctuation">:</span>   v<span class="token punctuation">.</span>CreatedAt<span class="token punctuation">.</span><span class="token function">UnixMilli</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
   Path<span class="token punctuation">:</span>        v<span class="token punctuation">.</span>Path<span class="token punctuation">,</span>
   Description<span class="token punctuation">:</span> v<span class="token punctuation">.</span>Description<span class="token punctuation">,</span>
   Group<span class="token punctuation">:</span>       v<span class="token punctuation">.</span>APIGroup<span class="token punctuation">,</span>
   Method<span class="token punctuation">:</span>      v<span class="token punctuation">.</span>Method<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
 <span class="token punctuation">}</span>

 <span class="token keyword">return</span> resp<span class="token punctuation">,</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="执行raw-sql" tabindex="-1"><a class="header-anchor" href="#执行raw-sql" aria-hidden="true">#</a> 执行raw sql</h3><p>若要支持纯 sql ，需要修改 makefile 生成代码， 添加 --feature sql/execquery</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>go run <span class="token parameter variable">-mod</span><span class="token operator">=</span>mod entgo.io/ent/cmd/ent generate <span class="token parameter variable">--template</span> <span class="token assign-left variable">glob</span><span class="token operator">=</span><span class="token string">&quot;./pkg/ent/template/*.tmpl&quot;</span> ./pkg/ent/schema <span class="token parameter variable">--feature</span> sql/execquery
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>即可通过client.QueryContext 调用</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>students<span class="token punctuation">,</span> err <span class="token operator">:=</span> client<span class="token punctuation">.</span><span class="token function">QueryContext</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;select * from student&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="项目默认添加了-page-模板" tabindex="-1"><a class="header-anchor" href="#项目默认添加了-page-模板" aria-hidden="true">#</a> 项目默认添加了 page 模板</h3><p>位于 ent/template/pagination.tmpl，生成代码时通过 --template glob=&quot;./pkg/ent/template/*.tmpl&quot; 导入, 提供简便的分页功能, 如果你的其他项目也想要这个分页功能需要将 template 文件夹复制到新项目的ent文件夹中。</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>apis<span class="token punctuation">,</span> err <span class="token operator">:=</span> l<span class="token punctuation">.</span>svcCtx<span class="token punctuation">.</span>DB<span class="token punctuation">.</span>API<span class="token punctuation">.</span><span class="token function">Query</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>predicates<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Page</span><span class="token punctuation">(</span>l<span class="token punctuation">.</span>ctx<span class="token punctuation">,</span> in<span class="token punctuation">.</span>Page<span class="token punctuation">,</span> in<span class="token punctuation">.</span>PageSize<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>注意： 排序需要放到 Page 中, 同时支持 Filter 对 query 进行过滤</p></blockquote><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>apis<span class="token punctuation">,</span> err <span class="token operator">:=</span> l<span class="token punctuation">.</span>svcCtx<span class="token punctuation">.</span>DB<span class="token punctuation">.</span>API<span class="token punctuation">.</span><span class="token function">Query</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>predicates<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Page</span><span class="token punctuation">(</span>l<span class="token punctuation">.</span>ctx<span class="token punctuation">,</span> in<span class="token punctuation">.</span>Page<span class="token punctuation">,</span> in<span class="token punctuation">.</span>PageSize<span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>pager <span class="token operator">*</span>ent<span class="token punctuation">.</span>APIPager<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    pager<span class="token punctuation">.</span>Order <span class="token operator">=</span> ent<span class="token punctuation">.</span><span class="token function">Asc</span><span class="token punctuation">(</span>api<span class="token punctuation">.</span>FieldID<span class="token punctuation">)</span>
    pager<span class="token punctuation">.</span>Filter <span class="token operator">=</span> <span class="token keyword">func</span><span class="token punctuation">(</span>query <span class="token operator">*</span>ent<span class="token punctuation">.</span>APIQuery<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>ent<span class="token punctuation">.</span>APIQuery<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> query<span class="token punctuation">,</span> <span class="token boolean">nil</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>默认使用ID排序，可以不用设置</p><blockquote><p>常见结果返回函数，用于query末尾</p></blockquote><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token comment">// .ExecX() 只执行，不返回错误和数据</span>
client<span class="token punctuation">.</span>Student<span class="token punctuation">.</span><span class="token function">UpdateOneID</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">SetName</span><span class="token punctuation">(</span><span class="token string">&quot;Jack&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ExecX</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment">// .Exec() 执行并返回错误</span>
err <span class="token operator">:=</span> client<span class="token punctuation">.</span>Student<span class="token punctuation">.</span><span class="token function">UpdateOneID</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">SetName</span><span class="token punctuation">(</span><span class="token string">&quot;Jack&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Exec</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment">// .Save() 执行并返回结果数据和错误， 例如下面 s 保存 student 对象</span>
s<span class="token punctuation">,</span> err <span class="token operator">:=</span> client<span class="token punctuation">.</span>Student<span class="token punctuation">.</span><span class="token function">Create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
<span class="token function">SetName</span><span class="token punctuation">(</span><span class="token string">&quot;Jack&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
<span class="token function">SetAddress</span><span class="token punctuation">(</span><span class="token string">&quot;Road&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
<span class="token function">SetAge</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
<span class="token function">Save</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment">// .SaveX() 执行并返回结果数据， 例如下面 s 保存 student 对象</span>
s <span class="token operator">:=</span> client<span class="token punctuation">.</span>Student<span class="token punctuation">.</span><span class="token function">Create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
<span class="token function">SetName</span><span class="token punctuation">(</span><span class="token string">&quot;Jack&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
<span class="token function">SetAddress</span><span class="token punctuation">(</span><span class="token string">&quot;Road&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
<span class="token function">SetAge</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
<span class="token function">SaveX</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,14),_={id:"ent-schema-生成工具-ent-import",tabindex:"-1"},C=n("a",{class:"header-anchor",href:"#ent-schema-生成工具-ent-import","aria-hidden":"true"},"#",-1),S={href:"https://github.com/ariga/entimport",target:"_blank",rel:"noopener noreferrer"};function D(I,A){const a=i("ExternalLinkIcon");return o(),c("div",null,[l,n("h4",r,[k,s(),n("a",d,[s("官方文档"),t(a)])]),n("h4",v,[m,s(),n("a",b,[s("schema中文文档(推荐)"),t(a)])]),g,n("h3",f,[h,s(" 软删除可查看 "),n("a",q,[s("Soft Delete"),t(a)])]),x,n("p",null,[s("查看文档 "),n("a",y,[s("断言"),t(a)])]),w,n("h3",_,[C,s(" Ent schema 生成工具 "),n("a",S,[s("ent import"),t(a)])])])}const R=e(u,[["render",D],["__file","ent.html.vue"]]);export{R as default};
