import{_ as t,W as o,X as i,Y as e,Z as a,$ as r,a0 as s,F as c}from"./framework-6f82d902.js";const d={},l=s('<h1 id="faq" tabindex="-1"><a class="header-anchor" href="#faq" aria-hidden="true">#</a> FAQ</h1><h2 id="默认账号是什么" tabindex="-1"><a class="header-anchor" href="#默认账号是什么" aria-hidden="true">#</a> 默认账号是什么？</h2><p>A: 账号: admin 密码: simple-admin</p><h2 id="注册的账号不能登录" tabindex="-1"><a class="header-anchor" href="#注册的账号不能登录" aria-hidden="true">#</a> 注册的账号不能登录?</h2><p>A: 默认注册成功后的角色是会员，没有登录的权限。你需要修改角色权限或者将用户的角色设置为管理员.</p><h2 id="go-zero-有几种服务注册发现方式" tabindex="-1"><a class="header-anchor" href="#go-zero-有几种服务注册发现方式" aria-hidden="true">#</a> go-zero 有几种服务注册发现方式？</h2>',6),p={href:"https://mp.weixin.qq.com/s/-WaWJaM_ePEQOf7ExNJe7w",target:"_blank",rel:"noopener noreferrer"},u=s(`<h2 id="如何处理跨域问题" tabindex="-1"><a class="header-anchor" href="#如何处理跨域问题" aria-hidden="true">#</a> 如何处理跨域问题？</h2><p>A: 修改 api/core.go</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>server <span class="token operator">:=</span> rest<span class="token punctuation">.</span><span class="token function">MustNewServer</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>RestConf<span class="token punctuation">,</span> rest<span class="token punctuation">.</span><span class="token function">WithCors</span><span class="token punctuation">(</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>修改 <code>*</code> 为自己的域名或IP,默认为<code>*</code>，允许所有。</p><h2 id="如何同步-fork-仓库" tabindex="-1"><a class="header-anchor" href="#如何同步-fork-仓库" aria-hidden="true">#</a> 如何同步 fork 仓库</h2><blockquote><p>给fork配置远程库,先查看远程状态</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> remote <span class="token parameter variable">-v</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>确定一个将被同步给 fork 远程的上游仓库, upstream后的地址是你即将同步的git地址</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> remote <span class="token function">add</span> upstream https://github.com/suyuan32/simple-admin-core.git
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>开始同步fork</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> fetch upstream
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>切换到本地主分支</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> checkout master
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>把 upstream/master 分支合并到本地 master 上，这样就完成了同步，并且不会丢掉本地修改的内容。</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> merge upstream/master
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,15);function h(m,b){const n=c("ExternalLinkIcon");return o(),i("div",null,[l,e("p",null,[a("A： 3 种 "),e("a",p,[a("go-zero"),r(n)])]),u])}const v=t(d,[["render",h],["__file","FAQ.html.vue"]]);export{v as default};
