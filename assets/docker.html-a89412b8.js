import{_ as t,X as l,Y as r,Z as n,$ as e,a0 as o,a1 as a,F as i}from"./framework-3afc3da2.js";const c={},d=a(`<h2 id="dockerfile-生成" tabindex="-1"><a class="header-anchor" href="#dockerfile-生成" aria-hidden="true">#</a> Dockerfile 生成</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>goctls <span class="token function">docker</span> <span class="token parameter variable">-s</span> core <span class="token parameter variable">-t</span> rpc <span class="token parameter variable">-c</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="docker-参数介绍" tabindex="-1"><a class="header-anchor" href="#docker-参数介绍" aria-hidden="true">#</a> <code>docker</code> 参数介绍</h3>`,3),p=n("thead",null,[n("tr",null,[n("th",null,"参数名称"),n("th",null,"必须"),n("th",null,"默认值"),n("th",null,"介绍")])],-1),u=n("tr",null,[n("td",null,"service_name"),n("td",null,"是"),n("td"),n("td",null,"项目的服务名称, 如 core")],-1),m=n("tr",null,[n("td",null,"service_type"),n("td",null,"否"),n("td",null,"rpc"),n("td",null,"服务类型，如 rpc，api")],-1),v=n("tr",null,[n("td",null,"auther"),n("td",null,"否"),n("td",null,[n("a",{href:"mailto:example@example.com"},"example@example.com")]),n("td",null,"作者信息")],-1),h=n("tr",null,[n("td",null,"base"),n("td",null,"否"),n("td",null,"alpine:latest"),n("td",null,"运行项目的基础镜像")],-1),b=n("tr",null,[n("td",null,"branch"),n("td",null,"否"),n("td"),n("td",null,"远程仓库的分支，需要与 --remote 一起使用")],-1),k=n("tr",null,[n("td",null,"china"),n("td",null,"否"),n("td"),n("td",null,"如果你的服务器在中国，请设置为 true")],-1),_=n("tr",null,[n("td",null,"home"),n("td",null,"否"),n("td"),n("td",null,"模板的 goctl home 路径，不能与 --remote 同时设置，如果同时设置，则以 --remote 为准")],-1),g=n("tr",null,[n("td",null,"image"),n("td",null,"否"),n("td",null,"golang:1.20.3-alpine3.17"),n("td",null,"用于构建项目的镜像")],-1),f=n("tr",null,[n("td",null,"port"),n("td",null,"否"),n("td"),n("td",null,"暴露的端口号，默认为不暴露")],-1),x=n("td",null,"remote",-1),q=n("td",null,"否",-1),z=n("td",null,null,-1),N={href:"https://github.com/zeromicro/go-zero-template",target:"_blank",rel:"noopener noreferrer"},V=n("tr",null,[n("td",null,"tz"),n("td",null,"否"),n("td"),n("td",null,"容器的时区，如 Asia/Shanghai")],-1),y=a(`<blockquote><p>运行 <code>goctls docker -h</code> 查看更多</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>
生成 Dockerfile

用法：
  goctl <span class="token function">docker</span> <span class="token punctuation">[</span>选项<span class="token punctuation">]</span>

选项：
  -u, <span class="token parameter variable">--author</span> string         作者信息 <span class="token punctuation">(</span>默认为 <span class="token string">&quot;example@example.com&quot;</span><span class="token punctuation">)</span>
  -a, <span class="token parameter variable">--base</span> string           运行项目的基础镜像 <span class="token punctuation">(</span>默认为 <span class="token string">&quot;alpine:latest&quot;</span><span class="token punctuation">)</span>
  -b, <span class="token parameter variable">--branch</span> string         远程仓库的分支，需要与 <span class="token parameter variable">--remote</span> 一起使用
  -c, <span class="token parameter variable">--china</span>                 如果你的服务器在中国，请设置为 <span class="token boolean">true</span>
  -h, <span class="token parameter variable">--help</span>                  显示帮助信息
  -m, <span class="token parameter variable">--home</span> string           模板的 goctl home 路径，不能与 <span class="token parameter variable">--remote</span> 同时设置，如果同时设置，则以 <span class="token parameter variable">--remote</span> 为准
  -i, <span class="token parameter variable">--image</span> string          用于构建项目的镜像 <span class="token punctuation">(</span>默认为 <span class="token string">&quot;golang:1.20.3-alpine3.17&quot;</span><span class="token punctuation">)</span>
  -p, <span class="token parameter variable">--port</span> int              暴露的端口号，默认为不暴露
  -r, <span class="token parameter variable">--remote</span> string         模板的远程 <span class="token function">git</span> 仓库，不能与 <span class="token parameter variable">--home</span> 同时设置，如果同时设置，则以 <span class="token parameter variable">--remote</span> 为准
                              <span class="token function">git</span> 仓库目录结构必须与 https://github.com/zeromicro/go-zero-template 一致
  -s, <span class="token parameter variable">--service_name</span> string   项目的服务名称
  -t, <span class="token parameter variable">--service_type</span> string   服务类型，如 rpc，api <span class="token punctuation">(</span>默认为 <span class="token string">&quot;rpc&quot;</span><span class="token punctuation">)</span>
  -z, <span class="token parameter variable">--tz</span> string             容器的时区，如 Asia/Shanghai。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2);function B(E,S){const s=i("ExternalLinkIcon");return l(),r("div",null,[d,n("table",null,[p,n("tbody",null,[u,m,v,h,b,k,_,g,f,n("tr",null,[x,q,z,n("td",null,[e("模板的远程 git 仓库，不能与 --home 同时设置，如果同时设置，则以 --remote 为准 git 仓库目录结构必须与 "),n("a",N,[e("https://github.com/zeromicro/go-zero-template"),o(s)]),e(" 一致")])]),V])]),y])}const D=t(c,[["render",B],["__file","docker.html.vue"]]);export{D as default};
