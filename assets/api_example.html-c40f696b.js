import{_ as l,a as i}from"./api_gen_struct-3403667f.js";import{_ as r}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as p,c,a as e,b as n,d as s,e as t}from"./app-cf2c5f9b.js";const d={},u=e("h1",{id:"_3-minutes-developing-api-service",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_3-minutes-developing-api-service","aria-hidden":"true"},"#"),n(" 3 minutes developing API service")],-1),m={class:"hint-container warning"},v=e("p",{class:"hint-container-title"},"Note",-1),h=e("p",null,"Make sure that you have been installed follow software:",-1),b=e("ul",null,[e("li",null,"simple-admin-tool (goctls) v1.5.5 +")],-1),k=e("br",null,null,-1),g={href:"https://go-zero.dev/docs/goctl/api",target:"_blank",rel:"noopener noreferrer"},f={href:"https://go-zero.dev/docs/advance/api-coding",target:"_blank",rel:"noopener noreferrer"},_=e("br",null,null,-1),y=e("br",null,null,-1),x={href:"https://github.com/suyuan32/simple-admin-example-api",target:"_blank",rel:"noopener noreferrer"},w=t(`<h2 id="responsibilities-of-the-api-service" tabindex="-1"><a class="header-anchor" href="#responsibilities-of-the-api-service" aria-hidden="true">#</a> Responsibilities of the API service</h2><p>In simple admin, the API service acts as a gateway, mainly providing the following functions:</p><ul><li>User authentication, such as JWT</li><li>Data processing, such as data filtering, international translation</li><li>Current limiting and fusing</li></ul><p>An API can access multiple RPCs, providing a unified request entryã€‚</p><h2 id="create-api-project" tabindex="-1"><a class="header-anchor" href="#create-api-project" aria-hidden="true">#</a> Create API project</h2><blockquote><p>Create example project</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>goctls api new example <span class="token parameter variable">--i18n</span><span class="token operator">=</span>true <span class="token parameter variable">--casbin</span><span class="token operator">=</span>true <span class="token parameter variable">--go_zero_version</span><span class="token operator">=</span>v1.5.2 <span class="token parameter variable">--tool_version</span><span class="token operator">=</span>v1.5.5 <span class="token parameter variable">--trans_err</span><span class="token operator">=</span>true <span class="token parameter variable">--module_name</span><span class="token operator">=</span>github.com/suyuan32/simple-admin-example-api <span class="token parameter variable">--port</span><span class="token operator">=</span><span class="token number">8081</span> <span class="token parameter variable">--gitlab</span><span class="token operator">=</span>true
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>Simpler Command</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>goctls api new example <span class="token parameter variable">-i</span> <span class="token parameter variable">-c</span> <span class="token parameter variable">-a</span> <span class="token parameter variable">-m</span> github.com/suyuan32/simple-admin-example-api <span class="token parameter variable">-p</span> <span class="token number">8081</span> <span class="token parameter variable">-g</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="hint-container warning"><p class="hint-container-title">Note</p><p>Create a project name that only supports lowercase and camelcase</p></div><h3 id="api-new-parameters" tabindex="-1"><a class="header-anchor" href="#api-new-parameters" aria-hidden="true">#</a> <code>api new</code> parameters</h3>`,11),T=e("thead",null,[e("tr",null,[e("th",null,"Parameter"),e("th",null,"Must"),e("th",null,"Default"),e("th",null,"Introduction"),e("th",null,"Usage")])],-1),N=e("tr",null,[e("td",null,"i18n"),e("td",null,"No"),e("td",null,"false"),e("td",null,"Whether to use i18n"),e("td",null,"true means use")],-1),I=e("tr",null,[e("td",null,"casbin"),e("td",null,"No"),e("td",null,"false"),e("td",null,"Whether to enable casbin for authentication and automatically add middleware"),e("td",null,"true means use")],-1),P=e("tr",null,[e("td",null,"module_name"),e("td",null,"No"),e("td"),e("td",null,"Module name in go.mod"),e("td",null,"If your project will be used by other project, you should set as above which is a github repository. If it is empty, the module will be the same as project name.")],-1),z=e("td",null,"go_zero_version",-1),C=e("td",null,"No",-1),j=e("td",null,"v1.5.2",-1),q=e("td",null,"go zero version",-1),E={href:"https://github.com/zeromicro/go-zero/releases",target:"_blank",rel:"noopener noreferrer"},S=e("td",null,"tool_version",-1),A=e("td",null,"No",-1),R=e("td",null,"v1.5.5",-1),W=e("td",null,"simple admin tools version",-1),M={href:"https://github.com/suyuan32/simple-admin-tools/releases",target:"_blank",rel:"noopener noreferrer"},D=e("tr",null,[e("td",null,"trans_err"),e("td",null,"No"),e("td",null,"false"),e("td",null,"Whether to use i18n in error"),e("td",null,"true means use")],-1),Y=e("tr",null,[e("td",null,"gitlab"),e("td",null,"No"),e("td",null,"false"),e("td",null,"Whether to generating gitlab-ci.yml"),e("td",null,"true means generating")],-1),U=e("tr",null,[e("td",null,"port"),e("td",null,"No"),e("td",null,"9100"),e("td",null,"port number"),e("td",null,"The service port")],-1),G=e("tr",null,[e("td",null,"style"),e("td",null,"No"),e("td",null,"go_zero"),e("td",null,"The format of the file name."),e("td",null,"snake case format is go_zero.")],-1),L=t(`<p><strong>More parameters please check <code>goctls api new --help</code></strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ goctls api new <span class="token parameter variable">--help</span>
Fast create api <span class="token function">service</span>

Usage:
  goctl api new <span class="token punctuation">[</span>flags<span class="token punctuation">]</span>

Flags:
      <span class="token parameter variable">--branch</span> string            The branch of the remote repo, it does work with <span class="token parameter variable">--remote</span>
  -c, <span class="token parameter variable">--casbin</span>                   Whether to use the Casbin
  -e, <span class="token parameter variable">--ent</span>                      Whether to use Ent <span class="token keyword">in</span> API <span class="token function">service</span>
  -g, <span class="token parameter variable">--gitlab</span>                   Whether to use gitlab CI/CD
  -z, <span class="token parameter variable">--go_zero_version</span> string   The go zero version used <span class="token keyword">for</span> replacement. e.g. v1.5.0, see <span class="token punctuation">[</span>https://github.com/zeromicro/go-zero/releases<span class="token punctuation">]</span>
  -h, <span class="token parameter variable">--help</span>                     <span class="token builtin class-name">help</span> <span class="token keyword">for</span> new
      <span class="token parameter variable">--home</span> string              The goctl home path of the template, <span class="token parameter variable">--home</span> and <span class="token parameter variable">--remote</span> cannot be <span class="token builtin class-name">set</span> at the same time, <span class="token keyword">if</span> they are, <span class="token parameter variable">--remote</span> has higher priority
  -i, <span class="token parameter variable">--i18n</span>                     Whether to use i18n
  -m, <span class="token parameter variable">--module_name</span> string       The module name <span class="token keyword">in</span> go.mod. e.g. github.com/suyuan32/simple-admin-core
  -p, <span class="token parameter variable">--port</span> int                 The <span class="token function">service</span> port exposed <span class="token punctuation">(</span>default <span class="token number">9100</span><span class="token punctuation">)</span>
      <span class="token parameter variable">--remote</span> string            The remote <span class="token function">git</span> repo of the template, <span class="token parameter variable">--home</span> and <span class="token parameter variable">--remote</span> cannot be <span class="token builtin class-name">set</span> at the same time, <span class="token keyword">if</span> they are, <span class="token parameter variable">--remote</span> has higher priority
                                 The <span class="token function">git</span> repo directory must be consistent with the https://github.com/zeromicro/go-zero-template directory structure
  -s, <span class="token parameter variable">--style</span> string             The <span class="token function">file</span> naming format, see <span class="token punctuation">[</span>https://github.com/zeromicro/go-zero/blob/master/tools/goctl/config/readme.md<span class="token punctuation">]</span> <span class="token punctuation">(</span>default <span class="token string">&quot;go_zero&quot;</span><span class="token punctuation">)</span>
  -t, <span class="token parameter variable">--tool_version</span> string      The simple admin tool version version used <span class="token keyword">for</span> migration. e.g. v0.3.0, see <span class="token punctuation">[</span>https://github.com/suyuan32/simple-admin-tools/releases<span class="token punctuation">]</span>
  -a, <span class="token parameter variable">--trans_err</span>                Whether to translate the error
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>You can see the project structure:</p></blockquote><figure><img src="`+i+`" alt="Example" tabindex="0" loading="lazy"><figcaption>Example</figcaption></figure><h3 id="file-structure" tabindex="-1"><a class="header-anchor" href="#file-structure" aria-hidden="true">#</a> File structure</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>â”œâ”€â”€ desc                             api declaration file storage directory
â”œâ”€â”€ etc                              configuration file directory
â””â”€â”€ internal
     â”œâ”€â”€config
     â”œâ”€â”€ handler                     handler directory
     â”‚ â”œâ”€â”€ base
     â”‚ â”œâ”€â”€ student
     â”‚ â””â”€â”€ teacher
     â”œâ”€â”€                             i18n internationalization i18n file directory
     â”‚ â””â”€â”€ locale
     â”œâ”€â”€ logic                       logic code directory
     â”‚ â”œâ”€â”€ base
     â”‚ â”œâ”€â”€ student
     â”‚ â””â”€â”€ teacher
     â”œâ”€â”€ middleware                  middleware directory
     â”œâ”€â”€ svc                         global parameter directory
     â””â”€â”€ types                       type declaration directory


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>And then edit etc/example.yaml</p></blockquote><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">Name</span><span class="token punctuation">:</span> example.api
<span class="token key atrule">Host</span><span class="token punctuation">:</span> 0.0.0.0
<span class="token key atrule">Port</span><span class="token punctuation">:</span> <span class="token number">8081</span>
<span class="token key atrule">Timeout</span><span class="token punctuation">:</span> <span class="token number">30000</span>

<span class="token key atrule">Auth</span><span class="token punctuation">:</span>
  <span class="token key atrule">AccessSecret</span><span class="token punctuation">:</span> <span class="token comment"># the same as core</span>
  <span class="token key atrule">AccessExpire</span><span class="token punctuation">:</span> <span class="token number">259200</span>

<span class="token key atrule">Log</span><span class="token punctuation">:</span>
  <span class="token key atrule">ServiceName</span><span class="token punctuation">:</span> exampleApiLogger
  <span class="token key atrule">Mode</span><span class="token punctuation">:</span> file
  <span class="token key atrule">Path</span><span class="token punctuation">:</span> /home/ryan/data/logs/example/api
  <span class="token key atrule">Level</span><span class="token punctuation">:</span> info
  <span class="token key atrule">Compress</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>
  <span class="token key atrule">KeepDays</span><span class="token punctuation">:</span> <span class="token number">7</span>
  <span class="token key atrule">StackCoolDownMillis</span><span class="token punctuation">:</span> <span class="token number">100</span>

<span class="token key atrule">Prometheus</span><span class="token punctuation">:</span>
  <span class="token key atrule">Host</span><span class="token punctuation">:</span> 0.0.0.0
  <span class="token key atrule">Port</span><span class="token punctuation">:</span> <span class="token number">4000</span>
  <span class="token key atrule">Path</span><span class="token punctuation">:</span> /metrics

<span class="token key atrule">RedisConf</span><span class="token punctuation">:</span>
  <span class="token key atrule">Host</span><span class="token punctuation">:</span> 127.0.0.1<span class="token punctuation">:</span><span class="token number">6379</span>
  <span class="token key atrule">Type</span><span class="token punctuation">:</span> node

<span class="token key atrule">DatabaseConf</span><span class="token punctuation">:</span>
  <span class="token key atrule">Type</span><span class="token punctuation">:</span> mysql
  <span class="token key atrule">Host</span><span class="token punctuation">:</span> 127.0.0.1
  <span class="token key atrule">Port</span><span class="token punctuation">:</span> <span class="token number">3306</span>
  <span class="token key atrule">DBName</span><span class="token punctuation">:</span> simple_admin
  <span class="token key atrule">Username</span><span class="token punctuation">:</span> root <span class="token comment"># set your username</span>
  <span class="token key atrule">Password</span><span class="token punctuation">:</span> <span class="token string">&quot;123456&quot;</span> <span class="token comment"># set your password</span>
  <span class="token key atrule">MaxOpenConn</span><span class="token punctuation">:</span> <span class="token number">100</span>
  <span class="token key atrule">SSLMode</span><span class="token punctuation">:</span> disable
  <span class="token key atrule">CacheTime</span><span class="token punctuation">:</span> <span class="token number">5</span>

<span class="token key atrule">CasbinConf</span><span class="token punctuation">:</span>
  <span class="token key atrule">ModelText</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">
    [request_definition]
    r = sub, obj, act
    [policy_definition]
    p = sub, obj, act
    [role_definition]
    g = _, _
    [policy_effect]
    e = some(where (p.eft == allow))
    [matchers]
    m = r.sub == p.sub &amp;&amp; keyMatch2(r.obj,p.obj) &amp;&amp; r.act == p.act</span>

<span class="token key atrule">ExampleRpc</span><span class="token punctuation">:</span>
  <span class="token key atrule">Endpoints</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> 127.0.0.1<span class="token punctuation">:</span><span class="token number">8080</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>Run the command below:</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>go run example.go <span class="token parameter variable">-f</span> etc/example.yaml
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>If you see the information below:</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>Starting server at <span class="token number">127.0</span>.0.1:8081<span class="token punctuation">..</span>.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>That means running successfully.</p><h2 id="code-generation-based-on-proto-file" tabindex="-1"><a class="header-anchor" href="#code-generation-based-on-proto-file" aria-hidden="true">#</a> Code generationï¼ˆbased on Proto fileï¼‰</h2><div class="hint-container warning"><p class="hint-container-title">Note</p><p>Proto must be the proto generated by <code>goctls rpc ent</code></p></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>goctls api proto <span class="token parameter variable">--proto</span><span class="token operator">=</span>/home/ryan/GolandProjects/simple-admin-example-rpc/example.proto <span class="token parameter variable">--style</span><span class="token operator">=</span>go_zero <span class="token parameter variable">--api_service_name</span><span class="token operator">=</span>example <span class="token parameter variable">--rpc_service_name</span><span class="token operator">=</span>Example <span class="token parameter variable">--output</span><span class="token operator">=</span>./ <span class="token parameter variable">--model</span><span class="token operator">=</span>Student <span class="token parameter variable">--rpc_name</span><span class="token operator">=</span>Example <span class="token parameter variable">--grpc_package</span><span class="token operator">=</span>github.com/suyuan32/simple-admin-example-rpc/example
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="api-proto-parameters" tabindex="-1"><a class="header-anchor" href="#api-proto-parameters" aria-hidden="true">#</a> <code>api proto</code> parameters</h3>`,17),O=e("thead",null,[e("tr",null,[e("th",null,"Parameters"),e("th",null,"Must"),e("th",null,"Default"),e("th",null,"Introduction"),e("th",null,"Usage")])],-1),B=e("tr",null,[e("td",null,"proto"),e("td",null,"Yes"),e("td"),e("td",null,"Proto file path"),e("td",null,[n("Input the absolute path of proto file. "),e("strong",null,[n("It should be the proto in "),e("code",null,"root"),n(" directory, not in desc. Because it needs package data and "),e("code",null,"Base"),n(" data.")])])],-1),F=e("tr",null,[e("td",null,"style"),e("td",null,"No"),e("td",null,"go_zero"),e("td",null,"File name format"),e("td",null,"The go_zero means snack format")],-1),Z=e("tr",null,[e("td",null,"i18n"),e("td",null,"No"),e("td",null,"false"),e("td",null,"Whether to use i18n"),e("td",null,"true means use")],-1),J=e("tr",null,[e("td",null,"api_service_name"),e("td",null,"Yes"),e("td"),e("td",null,"API Service name"),e("td",null,[n("The API service name set in "),e("code",null,".api"),n(" file")])],-1),H=e("tr",null,[e("td",null,"rpc_service_name"),e("td",null,"Yes"),e("td"),e("td",null,"RPC Service name"),e("td",null,[n("The RPC service name set in "),e("code",null,".proto"),n(" file")])],-1),V=e("tr",null,[e("td",null,"output"),e("td",null,"Yes"),e("td"),e("td",null,"Output path"),e("td",null,"The output pathï¼Œit can be relative path. It should target to the root path of project.")],-1),$=e("tr",null,[e("td",null,"model"),e("td",null,"Yes"),e("td"),e("td",null,"Model name"),e("td",null,"The structure name in schemaï¼Œe.g. the Student in example project")],-1),K=e("tr",null,[e("td",null,"rpc_name"),e("td",null,"Yes"),e("td"),e("td",null,"RPC name"),e("td",null,"Input Example will generate l.svcCtx.ExampleRpc")],-1),Q=e("td",null,"grpc_package",-1),X=e("td",null,"Yes",-1),ee=e("td",null,null,-1),ne=e("td",null,"RPC *_grpc.go package path",-1),ae={href:"http://github.com/suyuan32/simple-admin-example-rpc/example",target:"_blank",rel:"noopener noreferrer"},se=e("tr",null,[e("td",null,"multiple"),e("td",null,"No"),e("td",null,"false"),e("td",null,"Multiple Service"),e("td",null,"If your proto file contains multiple service, you should set true")],-1),te=e("tr",null,[e("td",null,"json_style"),e("td",null,"No"),e("td",null,"goZero"),e("td",null,"JSON tag format, the default is small camelCase"),e("td",null,"go_zero is underscore, GoZero is large camelCase")],-1),le=e("tr",null,[e("td",null,"import_prefix"),e("td",null,"No"),e("td"),e("td",null,"The path prefix of import"),e("td",null,"Import paths' prefix is only used when the service in sub folder, such as core service's api and rpc")],-1),ie=e("tr",null,[e("td",null,"overwrite"),e("td",null,"No"),e("td",null,"false"),e("td",null,"Whether it covers the generated file"),e("td",null,[e("code",null,"true"),n(" will cover all generated files")])],-1),re=t(`<p>** Run <code>goctls api proto --help</code> see more details. **</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ goctls api proto <span class="token parameter variable">--help</span>
Generate CRUD template from proto <span class="token function">file</span>

Usage:
  goctl api proto <span class="token punctuation">[</span>flags<span class="token punctuation">]</span>

Flags:
  -a, <span class="token parameter variable">--api_service_name</span> string   The API <span class="token function">service</span> name
  -g, <span class="token parameter variable">--grpc_package</span> string       The rpc package <span class="token function">which</span> stores pb file. e.g. github.com/suyuan32/simple-admin-job/types/job
  -h, <span class="token parameter variable">--help</span>                      <span class="token builtin class-name">help</span> <span class="token keyword">for</span> proto
  -i, <span class="token parameter variable">--i18n</span>                      Whether to use i18n
  -x, <span class="token parameter variable">--import_prefix</span> string      Import paths<span class="token string">&#39; prefix is only used when the service in sub folder, such as core service&#39;</span>s api and rpc
  -j, <span class="token parameter variable">--json_style</span> string         The JSON tag format, default is camelcase <span class="token punctuation">(</span>default <span class="token string">&quot;goZero&quot;</span><span class="token punctuation">)</span>
  -m, <span class="token parameter variable">--model</span> string              The model name <span class="token keyword">for</span> generating e.g. user, <span class="token keyword">if</span> it is empty, generate codes <span class="token keyword">for</span> all models <span class="token keyword">in</span> schema directory
      <span class="token parameter variable">--multiple</span>                  Whether the proto contains multiple services
  -o, <span class="token parameter variable">--output</span> string             The output path
  -w, <span class="token parameter variable">--overwrite</span>                 Whether to overwrite the files, it will overwrite all generated files
  -p, <span class="token parameter variable">--proto</span> string              The proto path
  -n, <span class="token parameter variable">--rpc_name</span> string           The rpc name <span class="token keyword">in</span> <span class="token function">service</span> context. e.g. CoreRpc
  -r, <span class="token parameter variable">--rpc_service_name</span> string   The RPC <span class="token function">service</span> name
  -k, <span class="token parameter variable">--search_key_num</span> int        The max number of search keys <span class="token punctuation">(</span>default <span class="token number">3</span><span class="token punctuation">)</span>
  -s, <span class="token parameter variable">--style</span> string              The <span class="token function">file</span> name <span class="token function">format</span> style <span class="token punctuation">(</span>default <span class="token string">&quot;go_zero&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),oe={class:"hint-container info"},pe=t(`<p class="hint-container-title">Info</p><p>Multiple Service Example, multiple is used to generate separate RPC client when there are several RPC service in one proto file.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>goctls api proto <span class="token parameter variable">--proto</span><span class="token operator">=</span>/home/ryan/GolandProjects/simple-admin-example-rpc/example.proto <span class="token parameter variable">--style</span><span class="token operator">=</span>go_zero <span class="token parameter variable">--api_service_name</span><span class="token operator">=</span>example <span class="token parameter variable">--rpc_service_name</span><span class="token operator">=</span>school <span class="token parameter variable">--o</span><span class="token operator">=</span>./ <span class="token parameter variable">--model</span><span class="token operator">=</span>Teacher <span class="token parameter variable">--rpc_name</span><span class="token operator">=</span>School <span class="token parameter variable">--grpc_package</span><span class="token operator">=</span>github.com/suyuan32/simple-admin-example-rpc/example <span class="token parameter variable">--multiple</span><span class="token operator">=</span>true
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,3),ce={href:"https://github.com/suyuan32/simple-admin-example-api/tree/multiple",target:"_blank",rel:"noopener noreferrer"},de=e("p",null,"The codes generated is like below:",-1),ue=e("figure",null,[e("img",{src:l,alt:"pic",tabindex:"0",loading:"lazy"}),e("figcaption",null,"pic")],-1),me={href:"https://github.com/suyuan32/simple-admin-example-api",target:"_blank",rel:"noopener noreferrer"},ve=t('<div class="hint-container warning"><p class="hint-container-title">Note</p><p>You need to add <code>ExampleRpc</code> manually into <code>service_context</code>, <code>config</code>, <code>etc</code>.</p></div><h2 id="code-generation-ent-based-single-service" tabindex="-1"><a class="header-anchor" href="#code-generation-ent-based-single-service" aria-hidden="true">#</a> Code generation (Ent-based single service)</h2><div class="hint-container info"><p class="hint-container-title">Info</p><p>If your project is small, single API service is a good choise. It doesn&#39;t need RPC services.</p></div>',3),he={class:"hint-container warning"},be=e("p",{class:"hint-container-title"},"Note",-1),ke=e("code",null,"--ent=true",-1),ge=e("code",null,"api new",-1),fe=e("br",null,null,-1),_e={href:"https://github.com/suyuan32/simple-admin-example-api-single",target:"_blank",rel:"noopener noreferrer"},ye=t(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>goctls api ent <span class="token parameter variable">--schema</span><span class="token operator">=</span>./ent/schema <span class="token parameter variable">--api_service_name</span><span class="token operator">=</span>example <span class="token parameter variable">--output</span><span class="token operator">=</span>./ <span class="token parameter variable">--model</span><span class="token operator">=</span><span class="token punctuation">{</span>modelName<span class="token punctuation">}</span> <span class="token parameter variable">--group</span><span class="token operator">=</span><span class="token punctuation">{</span>groupName<span class="token punctuation">}</span> <span class="token parameter variable">--search_key_num</span><span class="token operator">=</span><span class="token number">3</span> <span class="token parameter variable">--overwrite</span><span class="token operator">=</span>true
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><table><thead><tr><th>Parameter</th><th>Required</th><th>Default</th><th>Description</th><th>Usage</th></tr></thead><tbody><tr><td>schema</td><td>Yes</td><td></td><td>The address of the Ent schema file.</td><td>Enter the relative path of the Ent schema folder.</td></tr><tr><td>style</td><td>No</td><td>go_zero</td><td>The format of the file name.</td><td>snake case format for go_zero.</td></tr><tr><td>i18n</td><td>No</td><td>false</td><td>Whether to use i18n</td><td>true means use</td></tr><tr><td>api_service_name</td><td>Yes</td><td></td><td>The service name of the API, used in the API declaration file.</td><td>In the API declaration file.</td></tr><tr><td>output</td><td>Yes</td><td></td><td>The output location of the file, relative path is accepted.</td><td>Points to the main file directory.</td></tr><tr><td>model</td><td>Yes</td><td></td><td>The name of the model in the schema.</td><td>The internal struct name in the schema, such as Student in example.</td></tr><tr><td>search_key_num</td><td>No</td><td>3</td><td>The number of search fields in the list (default is 3).</td><td>Only string type fields can be automatically generated.</td></tr><tr><td>group</td><td>Yes</td><td></td><td>The name of the group, used to put different logic files in different folders.</td><td>Put different logic files in different folders.</td></tr><tr><td>json_style</td><td>No</td><td>goZero</td><td>The format of the JSON tag, default is camel case for go_zero.</td><td>Underline for go_zero, upper camel case for GoZero.</td></tr><tr><td>import_prefix</td><td>No</td><td></td><td>The path prefix of import</td><td>Import paths&#39; prefix is only used when the service in sub folder, such as core service&#39;s api and rpc</td></tr><tr><td>overwrite</td><td>No</td><td>false</td><td>Whether to overwrite the generated files.</td><td>Overwrite all generated files when true.</td></tr></tbody></table><div class="hint-container info"><p class="hint-container-title">Info</p><p>The shortcut command <code>make gen-api-ent-logic model={modelName} group={groupName}</code> means to generate the code whose schema is <code>{modelName}</code>, and <code>{groupName}</code> is the group name. Note that the first letter of modelName needs to be capitalized. Be consistent with the struct name in the schema</p></div><blockquote><p>** Run <code>goctls api ent --help</code> see more details **</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ goctls api ent <span class="token parameter variable">--help</span>
Generate CRUD logic files from ent <span class="token function">file</span>

Usage:
  goctl api ent <span class="token punctuation">[</span>flags<span class="token punctuation">]</span>

Flags:
  -a, <span class="token parameter variable">--api_service_name</span> string   The API <span class="token function">service</span> name
  -g, <span class="token parameter variable">--group</span> string              The group name <span class="token keyword">for</span> logic. e.g. user
  -h, <span class="token parameter variable">--help</span>                      <span class="token builtin class-name">help</span> <span class="token keyword">for</span> ent
  -i, <span class="token parameter variable">--i18n</span>                      Whether to use i18n
  -x, <span class="token parameter variable">--import_prefix</span> string      Import paths<span class="token string">&#39; prefix is only used when the service in sub folder, such as core service&#39;</span>s api and rpc
  -j, <span class="token parameter variable">--json_style</span> string         The JSON tag format, default is camelcase <span class="token punctuation">(</span>default <span class="token string">&quot;goZero&quot;</span><span class="token punctuation">)</span>
  -m, <span class="token parameter variable">--model</span> string              The model name <span class="token keyword">for</span> generating e.g. user, <span class="token keyword">if</span> it is empty, generate codes <span class="token keyword">for</span> all models <span class="token keyword">in</span> schema directory
  -o, <span class="token parameter variable">--output</span> string             The output path
  -w, <span class="token parameter variable">--overwrite</span>                 Whether to overwrite the files, it will overwrite all generated files
  -c, <span class="token parameter variable">--schema</span> string             The schema path of the Ent
  -k, <span class="token parameter variable">--search_key_num</span> int        The max number of search keys <span class="token punctuation">(</span>default <span class="token number">3</span><span class="token punctuation">)</span>
  -s, <span class="token parameter variable">--style</span> string              The <span class="token function">file</span> name <span class="token function">format</span> style <span class="token punctuation">(</span>default <span class="token string">&quot;go_zero&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="directory-structure" tabindex="-1"><a class="header-anchor" href="#directory-structure" aria-hidden="true">#</a> Directory Structure</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>
example
â”œâ”€â”€ Dockerfile
â”œâ”€â”€ Makefile
â”œâ”€â”€ desc                                   # declaration directory
â”‚ â”œâ”€â”€ all.api
â”‚ â””â”€â”€ base.api
â”œâ”€â”€ ent                                    # Ent directory
â”‚ â”œâ”€â”€ client.go
â”‚ â”œâ”€â”€ ent.go
â”‚ â”œâ”€â”€ enttest
â”‚ â”‚ â””â”€â”€ enttest.go
â”‚ â”œâ”€â”€ example
â”‚ â”‚ â”œâ”€â”€ example.go
â”‚ â”‚ â””â”€â”€ where.go
â”‚ â”œâ”€â”€ example.go
â”‚ â”œâ”€â”€ example_create.go
â”‚ â”œâ”€â”€ example_delete.go
â”‚ â”œâ”€â”€ example_query.go
â”‚ â”œâ”€â”€ example_update.go
â”‚ â”œâ”€â”€ generate.go
â”‚ â”œâ”€â”€ hook
â”‚ â”‚ â””â”€â”€ hook.go
â”‚ â”œâ”€â”€ migrate
â”‚ â”‚ â”œâ”€â”€ migrate.go
â”‚ â”‚ â””â”€â”€ schema.go
â”‚ â”œâ”€â”€ mutation.go
â”‚ â”œâ”€â”€ predicate
â”‚ â”‚ â””â”€â”€ predicate.go
â”‚ â”œâ”€â”€ runtime
â”‚ â”‚ â””â”€â”€ runtime.go
â”‚ â”œâ”€â”€ runtime.go
â”‚ â”œâ”€â”€ schema                                 # model directory
â”‚ â”‚ â””â”€â”€ example.go
â”‚ â”œâ”€â”€ template
â”‚ â”‚ â”œâ”€â”€ not_empty_update.tmpl
â”‚ â”‚ â””â”€â”€ pagination.tmpl
â”‚ â””â”€â”€ tx.go
â”œâ”€â”€ etc                                      # configuration file directory
â”‚ â””â”€â”€ example.yaml
â”œâ”€â”€ example.go
â”œâ”€â”€ go.mod
â”œâ”€â”€ go.sum
â””â”€â”€ internal
     â”œâ”€â”€config
     â”‚ â””â”€â”€ config.go
     â”œâ”€â”€ handler
     â”‚ â”œâ”€â”€ base
     â”‚ â”‚ â””â”€â”€ init_database_handler.go
     â”‚ â””â”€â”€ routes.go
     â”œâ”€â”€ i18n                                 # Internationalization file directory
     â”‚ â”œâ”€â”€ locale
     â”‚ â”‚ â”œâ”€â”€ en.json
     â”‚ â”‚ â””â”€â”€ zh.json
     â”‚ â””â”€â”€ vars.go
     â”œâ”€â”€ logic
     â”‚ â””â”€â”€ base
     â”‚ â””â”€â”€ init_database_logic.go
     â”œâ”€â”€ middleware
     â”‚ â””â”€â”€ authority_middleware.go
     â”œâ”€â”€ svc
     â”‚ â””â”€â”€ service_context.go
     â”œâ”€â”€ types
     â”‚ â””â”€â”€ types.go
     â””â”€â”€ utils                                # tools directory
         â”œâ”€â”€ dberrorhandler                   # Ent error handling tool
         â”‚ â””â”€â”€ error_handler.go
         â””â”€â”€ entx                             # Ent transaction support function
             â””â”€â”€ ent_tx.go
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7);function xe(we,Te){const a=o("ExternalLinkIcon");return p(),c("div",null,[u,e("div",m,[v,h,b,e("p",null,[k,n(" Must know go-zero's API command. "),e("a",g,[n("API Command"),s(a)]),n(),e("a",f,[n("Api Service"),s(a)]),n(),_,y,n(" Refer to the "),e("a",x,[n("Example"),s(a)]),n(" project to generate it again, confirm that the generated file is consistent with the Example project, and the Example project has complete commands.")])]),w,e("table",null,[T,e("tbody",null,[N,I,P,e("tr",null,[z,C,j,q,e("td",null,[n("Go to "),e("a",E,[n("go-zero"),s(a)]),n(" to get the latest release")])]),e("tr",null,[S,A,R,W,e("td",null,[n("Go to "),e("a",M,[n("tool"),s(a)]),n(" to get the latest release")])]),D,Y,U,G])]),L,e("table",null,[O,e("tbody",null,[B,F,Z,J,H,V,$,K,e("tr",null,[Q,X,ee,ne,e("td",null,[n("In example project is "),e("a",ae,[n("github.com/suyuan32/simple-admin-example-rpc/example"),s(a)])])]),se,te,le,ie])]),re,e("div",oe,[pe,e("p",null,[e("a",ce,[n("Example Code"),s(a)])])]),de,ue,e("blockquote",null,[e("p",null,[n("See more detail in simple admin example api URL "),e("a",me,[n("https://github.com/suyuan32/simple-admin-example-api"),s(a)])])]),ve,e("div",he,[be,e("p",null,[n("Single services need to set "),ke,n(" when using the "),ge,n(" command. "),fe,n(" Learn from "),e("a",_e,[n("Single Example"),s(a)])])]),ye])}const ze=r(d,[["render",xe],["__file","api_example.html.vue"]]);export{ze as default};
